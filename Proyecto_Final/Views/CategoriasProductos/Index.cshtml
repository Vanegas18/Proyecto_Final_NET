@model IEnumerable<Proyecto_Final.Models.CategoriasProducto>

@{
    ViewData["Title"] = "Categorias de Productos - ";
}

<!-- Estilos -->
<head>
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
</head>

<style>
    main .tablaProductos tbody tr:nth-child(odd) {
        background-color: #d9d9d9;
    }

    main .tablaProductos tbody tr:nth-child(even) {
        background-color: #cecece;
    }
</style>

<!-- Contenido -->
<body>
    <div class="container">
        <!-- Navegación -->
        <nav>
            <a asp-controller="Home" asp-action="Index" class="logo">BuildMart</a>
            <div class="login">
                <button type="button" class="btn btn-dark">
                    <a asp-controller="Home" asp-action="Index" class="signup" style="color: white;">Inicio</a>
                </button>
            </div>
        </nav>

        <!-- Tabla -->
        <main class="mainTables">
            <div class="recent-orders">
                <!-- Título -->
                <h1 style="text-align: center;">GESTIÓN CATEGORÍAS DE PRODUCTOS</h1>
                <!-- Opciones -->
                <div class="linksOptions" style="margin-left: 450px;">
                    <button type="button" class="btn btn-primary">
                        <a asp-action="Create" style="color: white;">Agregar nueva categoría</a>
                    </button>
                    <button type="button" class="btn btn-primary">
                        <a asp-controller="Productos" asp-action="Index" style="color: white;">Volver a los productos</a>
                    </button>
                </div>
            </div>
            <table class="table tablaProductos" id="example">
                <!-- Titulo de las tablas -->
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Descripcion)
                        </th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <!-- Contenido de las tablas -->
                <tbody>
                    @foreach (var item in Model) {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Descripcion)
                            </td>
                            <td>
                                <button type="button" class="btn btn-secondary">
                                    <a asp-action="Edit" asp-route-id="@item.IdcategoriaProducto" style="color: white;">Editar</a>
                                </button>
                                <button type="button" class="btn btn-danger">
                                    <a onclick="confirmDelete(@item.IdcategoriaProducto)" style="color: white;">Eliminar</a>
                                </button>
                                <button type="button" class="btn btn-secondary">
                                    <a asp-action="Details" asp-route-id="@item.IdcategoriaProducto" style="color: white;">Detalles</a>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </main>
    </div>
</body>

<!-- Formulario oculto para el token de verificación -->
<form id="deleteForm" method="post" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<script>
    // Función para confirmar la eliminación de una categoría
    function confirmDelete(id) {
        Swal.fire({
            title: '¿Estás seguro de que deseas eliminar esta Categoría?',
            text: "¡No podrás revertir esto!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '¡Sí, elimínalo!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Crear formulario
                var form = document.createElement('form');
                form.method = 'post';
                form.action = '/CategoriasProductos/DeleteConfirmed';

                // Crear input
                var input = document.createElement('input');
                input.type = 'hidden';
                input.setAttribute('name', 'id');
                input.setAttribute('value', id);
                form.appendChild(input);

                // Token de verificación
                var token = document.querySelector('#deleteForm input[name="__RequestVerificationToken"]').cloneNode(true);
                form.appendChild(token);

                // Enviar formulario
                document.body.appendChild(form);
                form.submit();
            }
        })
    }

    // Mostrar mensaje de error si existe
    @if (TempData["mensaje"] != null)
    {
        <text>
            Swal.fire({
                icon: 'error',
                title: '¡Error!',
                text: '@TempData["mensaje"]'
            });
        </text>
    }

    // Inicializar DataTable
    new DataTable('#example', {
        dom: '',
        // Modificar el idioma de la tabla
        language: {
            search: "Buscar:",
            lengthMenu: "Mostrar _MENU_ entradas",
            info: "Mostrando _START_ a _END_ de _TOTAL_ entradas",
            infoEmpty: "Mostrando 0 a 0 de 0 entradas",
            infoFiltered: "(filtrado de _MAX_ entradas totales)",
            paginate: {
                next: ">",
                previous: "<"
            },
            zeroRecords: "No se encontraron registros coincidentes"
        },
        layout: {
            topStart: {
                buttons: [
                    {
                        extend: 'copy',
                        text: '<i class="fa-solid fa-copy"></i>',
                        className: 'botonCopiar btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'csv',
                        text: '<i class="fa-solid fa-file-csv"></i>',
                        className: 'botonCsv btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'excel',
                        text: '<i class="fa-solid fa-file-excel"></i>',
                        className: 'botonExcel btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    },
                    {
                        extend: 'pdf',
                        text: `<i class="fa-solid fa-file-pdf"></i>`,
                        className: 'botonPdf btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        },
                        customize: function (doc) {
                            doc.content[1].table.widths = ['*', '*'];
                            doc.content[1].table.body.forEach(function (row) {
                                row.forEach(function (cell) {
                                    cell.alignment = 'center';
                                });
                            });
                        }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fa-solid fa-print"></i>',
                        className: 'botonPrint btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        },
                        customize: function (win) {
                            $(win.document.body).find('table').addClass('display').css('text-align', 'center');
                            $(win.document.body).find('table th, table td').css('text-align', 'center');
                        }
                    },
                    {
                        extend: 'colvis',
                        text: 'Filtrar ',
                        className: 'botonColvis btn',
                        exportOptions: {
                            columns: [0, 1] // Excluye la última columna
                        }
                    }
                ]
            }
        },
        scrollX: true,
        initComplete: function (json, settings) {
            // Eliminar clase por defecto y añadir clase personalizada
            $(".dt-buttons").removeClass("dt-buttons");
            $(".dt-button").addClass("botones");
        }
    });
</script>
