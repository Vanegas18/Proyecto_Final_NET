// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Final.Models;

#nullable disable

namespace Proyecto_Final.Migrations
{
    [DbContext(typeof(ProyectoFinalNetContext))]
    partial class ProyectoFinalNetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Final.Models.CategoriasProducto", b =>
                {
                    b.Property<int>("IdcategoriaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCategoriaProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcategoriaProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdcategoriaProducto")
                        .HasName("PK__Categori__A576776E63636582");

                    b.ToTable("CategoriasProductos");
                });

            modelBuilder.Entity("Proyecto_Final.Models.CategoriasProveedore", b =>
                {
                    b.Property<int>("IdcategoriaProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCategoriaProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcategoriaProveedor"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdcategoriaProveedor")
                        .HasName("PK__Categori__709242122CD958A2");

                    b.ToTable("CategoriasProveedores");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Compra", b =>
                {
                    b.Property<int>("Idcompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcompra"));

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Idproveedor")
                        .HasColumnType("int")
                        .HasColumnName("IDProveedor");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Idcompra")
                        .HasName("PK__Compras__08719EC1EB95BB38");

                    b.HasIndex("Idproveedor");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Proyecto_Final.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IddetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDDetalleCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IddetalleCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Idcompra")
                        .HasColumnType("int")
                        .HasColumnName("IDCompra");

                    b.Property<int>("Idproducto")
                        .HasColumnType("int")
                        .HasColumnName("IDProducto");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("money");

                    b.Property<decimal?>("Subtotal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([Cantidad]*[PrecioUnitario])", true);

                    b.HasKey("IddetalleCompra")
                        .HasName("PK__DetalleC__DE482504452456E7");

                    b.HasIndex("Idcompra");

                    b.HasIndex("Idproducto");

                    b.ToTable("DetalleCompras");
                });

            modelBuilder.Entity("Proyecto_Final.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IddetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDDetalleVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IddetalleVenta"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Idproducto")
                        .HasColumnType("int")
                        .HasColumnName("IDProducto");

                    b.Property<int>("Idventa")
                        .HasColumnType("int")
                        .HasColumnName("IDVenta");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Subtotal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(21, 2)")
                        .HasComputedColumnSql("([Cantidad]*[PrecioUnitario])", true);

                    b.HasKey("IddetalleVenta")
                        .HasName("PK__DetalleV__DA9AFB791111DA58");

                    b.HasIndex("Idproducto");

                    b.HasIndex("Idventa");

                    b.ToTable("DetalleVentas");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Producto", b =>
                {
                    b.Property<int>("Idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idproducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdcategoriaProducto")
                        .HasColumnType("int")
                        .HasColumnName("IDCategoriaProducto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("money");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Idproducto")
                        .HasName("PK__Producto__ABDAF2B4A59F8E32");

                    b.HasIndex("IdcategoriaProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Proveedore", b =>
                {
                    b.Property<int>("Idproveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idproveedor"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdcategoriaProveedor")
                        .HasColumnType("int")
                        .HasColumnName("IDCategoriaProveedor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Idproveedor")
                        .HasName("PK__Proveedo__4CD73240F07A183C");

                    b.HasIndex("IdcategoriaProveedor");

                    b.HasIndex(new[] { "Correo" }, "UQ__Proveedo__60695A191855FCD3")
                        .IsUnique();

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idusuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idusuario")
                        .HasName("PK__Usuarios__5231116969BB05BA");

                    b.HasIndex(new[] { "Correo" }, "UQ__Usuarios__60695A19068FEC77")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Venta", b =>
                {
                    b.Property<int>("Idventa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idventa"));

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int")
                        .HasColumnName("IDUsuario");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.HasKey("Idventa")
                        .HasName("PK__Ventas__27134B8287EFB1C0");

                    b.HasIndex("Idusuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Compra", b =>
                {
                    b.HasOne("Proyecto_Final.Models.Proveedore", "IdproveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("Idproveedor")
                        .IsRequired()
                        .HasConstraintName("FK__Compras__IDProve__3A81B327");

                    b.Navigation("IdproveedorNavigation");
                });

            modelBuilder.Entity("Proyecto_Final.Models.DetalleCompra", b =>
                {
                    b.HasOne("Proyecto_Final.Models.Compra", "IdcompraNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("Idcompra")
                        .IsRequired()
                        .HasConstraintName("FK__DetalleCo__IDCom__3D5E1FD2");

                    b.HasOne("Proyecto_Final.Models.Producto", "IdproductoNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("Idproducto")
                        .IsRequired()
                        .HasConstraintName("FK__DetalleCo__IDPro__3E52440B");

                    b.Navigation("IdcompraNavigation");

                    b.Navigation("IdproductoNavigation");
                });

            modelBuilder.Entity("Proyecto_Final.Models.DetalleVenta", b =>
                {
                    b.HasOne("Proyecto_Final.Models.Producto", "IdproductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("Idproducto")
                        .IsRequired()
                        .HasConstraintName("FK__DetalleVe__IDPro__45F365D3");

                    b.HasOne("Proyecto_Final.Models.Venta", "IdventaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("Idventa")
                        .IsRequired()
                        .HasConstraintName("FK__DetalleVe__IDVen__44FF419A");

                    b.Navigation("IdproductoNavigation");

                    b.Navigation("IdventaNavigation");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Producto", b =>
                {
                    b.HasOne("Proyecto_Final.Models.CategoriasProducto", "IdcategoriaProductoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdcategoriaProducto")
                        .IsRequired()
                        .HasConstraintName("FK__Productos__IDCat__29572725");

                    b.Navigation("IdcategoriaProductoNavigation");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Proveedore", b =>
                {
                    b.HasOne("Proyecto_Final.Models.CategoriasProveedore", "IdcategoriaProveedorNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdcategoriaProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__Proveedor__IDCat__2F10007B");

                    b.Navigation("IdcategoriaProveedorNavigation");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Venta", b =>
                {
                    b.HasOne("Proyecto_Final.Models.Usuario", "IdusuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("Idusuario")
                        .IsRequired()
                        .HasConstraintName("FK__Ventas__IDUsuari__4222D4EF");

                    b.Navigation("IdusuarioNavigation");
                });

            modelBuilder.Entity("Proyecto_Final.Models.CategoriasProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Proyecto_Final.Models.CategoriasProveedore", b =>
                {
                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompras");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Producto", b =>
                {
                    b.Navigation("DetalleCompras");

                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Usuario", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Proyecto_Final.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
